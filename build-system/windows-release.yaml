# Release task for PbLib projects
# See https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema for reference

pool:
  vmImage: windows-latest
  demands: Cmd

trigger:
  branches:
    include:
      - refs/tags/*

pr: none

variables:
  - group: signingSecrets #create this group with SECRET variables `signingUsername` and `signingPassword`
  - group: phoboActorCommonNuGet #create this group with SECRET variables `nugetKey`
  - name: githubConnectionName
    value: PhobosReleaseNotes
  - name: projectName
    value: Phobos.Actor.Common #replace this
  - name: githubRepositoryName
    value: petabridge/phobos.actor.common #replace this

steps:
- task: UseDotNet@2
  displayName: "Install .NET SDK"
  packageType: sdk
  useGlobalJson: true

- task: BatchScript@1
  displayName: 'FAKE Build'
  inputs:
    filename: build.cmd
    arguments: 'All SignClientUser=$(signingUsername) SignClientSecret=$(signingPassword) nugetpublishurl=$(nugetPublishUrl) nugetkey=$(nugetKey)'
  continueOnError: true  # 'true' if future steps should run even if this step fails; defaults to 'false'

- task: CopyFiles@2
  displayName: 'Copy Build Output'
  inputs:
    sourceFolder: 'bin/nuget'
    contents: '**\*'
    targetFolder: $(Build.ArtifactStagingDirectory)
    continueOnError: true  # 'true' if future steps should run even if this step fails; defaults to 'false'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'nuget_pack-$(Build.BuildId)'

# terminate build if we've failed prior to this point
- script: 'echo 1>&2'
  failOnStderr: true
  displayName: 'If above is partially succeeded, then fail'
  condition: eq(variables['Agent.JobStatus'], 'SucceededWithIssues')

- task: GitHubRelease@0
  displayName: 'GitHub release (create)'
  inputs:
    gitHubConnection: $(githubConnectionName)
    repositoryName: $(githubRepositoryName)
    title: '$(projectName) v$(Build.SourceBranchName)'
    releaseNotesFile: 'RELEASE_NOTES.md'
    assets: |
     bin\nuget\*.nupkg
